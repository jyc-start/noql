[
  {
    "name": "Array:FIRST_IN_ARRAY",
    "query": "select `First Name` as Name,FIRST_IN_ARRAY(`Rentals`) as Rental from `customers` where `id`>1 limit 10 offset 5",
    "output": {
      "collection": "customers",
      "limit": 10,
      "skip": 5,
      "projection": {
        "Rental": {
          "$first": "$Rentals"
        },
        "Name": "$First Name"
      },
      "query": {
        "id": {
          "$gt": 1
        }
      }
    }
  },
  {
    "name": "Array:IS_ARRAY",
    "query": "select id,(case when IS_ARRAY(Rentals) then 'Yes' else 'No' end) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$switch": {
            "branches": [
              {
                "case": {
                  "$isArray": "$Rentals"
                },
                "then": "Yes"
              }
            ],
            "default": {
              "$literal": "No"
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:IS_ARRAY",
    "query": "select id,IS_ARRAY(Rentals) as isArray from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "isArray": {
          "$isArray": "$Rentals"
        }
      }
    }
  },
  {
    "name": "Array:SIZE_OF_ARRAY",
    "query": "SELECT abs(id + SIZE_OF_ARRAY(Rentals) + 1) as testComplex FROM customers WHERE `First Name` like '%bc%'",
    "output": {
      "limit": 100,
      "collection": "customers",
      "query": {
        "First Name": {
          "$regex": "bc",
          "$options": "i"
        }
      },
      "projection": {
        "testComplex": {
          "$abs": {
            "$add": [
              {
                "$add": [
                  "$id",
                  {
                    "$size": "$Rentals"
                  }
                ]
              },
              1
            ]
          }
        }
      }
    }
  },
  {
    "name": "Array:Sub Select",
    "query": "select id,Title,Rating,(select * from Rentals where staffId<10) as rentalsArr from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "Title": "$Title",
        "Rating": "$Rating",
        "rentalsArr": {
          "$map": {
            "input": {
              "$filter": {
                "input": "$Rentals",
                "cond": {
                  "$and": [
                    {
                      "$lt": ["$$this.staffId", "10"]
                    }
                  ]
                }
              }
            },
            "in": "$$this"
          }
        }
      }
    }
  },
  {
    "name": "Array:SIZE_OF_ARRAY",
    "query": "SELECT CEIL(id + SIZE_OF_ARRAY(Rentals) + 1) as testComplex FROM customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "testComplex": {
          "$ceil": {
            "$add": [
              {
                "$add": [
                  "$id",
                  {
                    "$size": "$Rentals"
                  }
                ]
              },
              1
            ]
          }
        }
      }
    }
  },
  {
    "name": "Array:SUM_ARRAY",
    "query": "select id,`First Name`,`Last Name`,SUM_ARRAY(`Rentals`,`Payments`,'Amount') as totalPayments from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "First Name": "$First Name",
        "Last Name": "$Last Name",
        "totalPayments": {
          "$reduce": {
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": [
                "$$value",
                {
                  "$reduce": {
                    "input": "$$this.Payments",
                    "initialValue": 0,
                    "in": {
                      "$sum": ["$$value", "$$this.Amount"]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:SUM_ARRAY",
    "query": "select id,`First Name`,`Last Name`,SUM_ARRAY(`Rentals`,'filmId') as totalIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "First Name": "$First Name",
        "Last Name": "$Last Name",
        "totalIdRentals": {
          "$reduce": {
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$sum": ["$$value", "$$this.filmId"]
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:SUM_ARRAY",
    "query": "select SUM_ARRAY((select SUM_ARRAY(`Payments`,'Amount') as total from `Rentals`),'total') as t from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "t": {
          "$reduce": {
            "input": {
              "$map": {
                "input": "$Rentals",
                "in": {
                  "total": {
                    "$reduce": {
                      "input": "$$this.Payments",
                      "initialValue": 0,
                      "in": {
                        "$sum": ["$$value", "$$this.Amount"]
                      }
                    }
                  }
                }
              }
            },
            "initialValue": 0,
            "in": {
              "$sum": ["$$value", "$$this.total"]
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:SUM_ARRAY",
    "query": "select id,(select `Film Title` as Title,SUM_ARRAY(`Payments`,'Amount') as totalPayment from `Rentals`) as Rentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "Rentals": {
          "$map": {
            "input": "$Rentals",
            "in": {
              "Title": "$$this.Film Title",
              "totalPayment": {
                "$reduce": {
                  "input": "$$this.Payments",
                  "initialValue": 0,
                  "in": {
                    "$sum": ["$$value", "$$this.Amount"]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:FIRST_IN_ARRAY",
    "query": "select id,FIRST_IN_ARRAY(`Rentals`) as test from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": "$id",
        "test": {
          "$first": "$Rentals"
        }
      }
    }
  },
  {
    "name": "Array:LAST_IN_ARRAY",
    "query": "select id,LAST_IN_ARRAY(`Rentals`) as test from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": "$id",
        "test": {
          "$last": "$Rentals"
        }
      }
    }
  },
  {
    "name": "Array:REVERSE_ARRAY",
    "query": "select id,REVERSE_ARRAY(`Rentals`) as test from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": "$id",
        "test": {
          "$reverseArray": "$Rentals"
        }
      }
    }
  },
  {
    "name": "Array:ARRAY_ELEM_AT",
    "query": "select id,ARRAY_ELEM_AT(`Rentals`,5) as test from `customers`",
    "output": {
      "collection": "customers",
      "limit": 100,
      "projection": {
        "id": "$id",
        "test": {
          "$arrayElemAt": [
            "$Rentals",
            {
              "$literal": 5
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:AVG_ARRAY",
    "query": "select id,`First Name`,`Last Name`,avg_ARRAY((select filmId as '$$ROOT' from 'Rentals')) as avgIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "First Name": "$First Name",
        "Last Name": "$Last Name",
        "avgIdRentals": {
          "$reduce": {
            "input": {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            "initialValue": 0,
            "in": {
              "$avg": ["$$value", "$$this"]
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:AVG_ARRAY",
    "query": "select id,`First Name`,`Last Name`,avg_ARRAY(`Rentals`,'filmId') as avgIdRentals from customers",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "First Name": "$First Name",
        "Last Name": "$Last Name",
        "avgIdRentals": {
          "$reduce": {
            "input": "$Rentals",
            "initialValue": 0,
            "in": {
              "$avg": ["$$value", "$$this.filmId"]
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:ALL_ELEMENTS_TRUE",
    "query": "select id,(case when ALL_ELEMENTS_TRUE(Rentals) then 'Yes' else 'No' end) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$switch": {
            "branches": [
              {
                "case": {
                  "$allElementsTrue": ["$Rentals"]
                },
                "then": "Yes"
              }
            ],
            "default": {
              "$literal": "No"
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:ANY_ELEMENT_TRUE",
    "query": "select id,(case when ANY_ELEMENT_TRUE(Rentals) then 'Yes' else 'No' end) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$switch": {
            "branches": [
              {
                "case": {
                  "$anyElementTrue": ["$Rentals"]
                },
                "then": "Yes"
              }
            ],
            "default": {
              "$literal": "No"
            }
          }
        }
      }
    }
  },
  {
    "name": "Array:INDEXOF_ARRAY",
    "query": "select id,INDEXOF_ARRAY((select filmId as '$$ROOT' from `Rentals`),22) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$indexOfArray": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": 22
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:ARRAY_RANGE",
    "query": "select id,ARRAY_RANGE(0,10,2) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$range": [
            {
              "$literal": 0
            },
            {
              "$literal": 10
            },
            {
              "$literal": 2
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:ZIP_ARRAY",
    "query": "select id,ZIP_ARRAY((select `Film Title` as '$$ROOT' from `Rentals`),ARRAY_RANGE(0,10,2)) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$zip": {
            "inputs": [
              {
                "$map": {
                  "input": "$Rentals",
                  "in": "$$this.Film Title"
                }
              },
              {
                "$range": [
                  {
                    "$literal": 0
                  },
                  {
                    "$literal": 10
                  },
                  {
                    "$literal": 2
                  }
                ]
              }
            ]
          }
        }
      }
    }
  },
  {
    "name": "Array:CONCAT_ARRAYS",
    "query": "select id,CONCAT_ARRAYS((select `Film Title` as '$$ROOT' from `Rentals`),ARRAY_RANGE(0,10,2)) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$concatArrays": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.Film Title"
              }
            },
            {
              "$range": [
                {
                  "$literal": 0
                },
                {
                  "$literal": 10
                },
                {
                  "$literal": 2
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:OBJECT_TO_ARRAY",
    "query": "select id,OBJECT_TO_ARRAY(`Address`) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$objectToArray": "$Address"
        }
      }
    }
  },
  {
    "name": "Array:ARRAY_TO_OBJECT",
    "query": "select id,ARRAY_TO_OBJECT(OBJECT_TO_ARRAY(`Address`)) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$arrayToObject": {
            "$objectToArray": "$Address"
          }
        }
      }
    }
  },
  {
    "name": "Array:SET_INTERSECTION",
    "query": "select id,SET_INTERSECTION((select filmId as '$$ROOT' from `Rentals`),PARSE_JSON('[ 1,2,3,4] ')) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$setIntersection": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": [1, 2, 3, 4]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:SET_UNION",
    "query": "select id,SET_UNION((select filmId as '$$ROOT' from `Rentals`),PARSE_JSON('[ 1,2,3,4] ')) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$setUnion": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": [1, 2, 3, 4]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:SET_DIFFERENCE",
    "query": "select id,SET_DIFFERENCE((select filmId as '$$ROOT' from `Rentals`),PARSE_JSON('[ 1,2,3,4] ')) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$setDifference": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": [1, 2, 3, 4]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:SET_EQUALS",
    "query": "select id,SET_EQUALS((select filmId as '$$ROOT' from `Rentals`),PARSE_JSON('[ 1,2,3,4] ')) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$setEquals": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": [1, 2, 3, 4]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:SET_IS_SUBSET",
    "query": "select id,SET_IS_SUBSET((select filmId as '$$ROOT' from `Rentals`),PARSE_JSON('[ 1,2,3,4] ')) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$setIsSubset": [
            {
              "$map": {
                "input": "$Rentals",
                "in": "$$this.filmId"
              }
            },
            {
              "$literal": [1, 2, 3, 4]
            }
          ]
        }
      }
    }
  },
  {
    "name": "Array:Sub select",
    "query": "select id,Title,Rating,(select * from Rentals where `Film Title` like '%rin%' and staffId=2) as rentalsArr from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "Title": "$Title",
        "Rating": "$Rating",
        "rentalsArr": {
          "$map": {
            "input": {
              "$filter": {
                "input": "$Rentals",
                "cond": {
                  "$and": [
                    {
                      "$and": [
                        {
                          "$regexMatch": {
                            "input": "$$this.Film Title",
                            "regex": "rin",
                            "options": "i"
                          }
                        },
                        {
                          "$eq": ["$$this.staffId", 2]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "in": "$$this"
          }
        }
      }
    }
  }
]
