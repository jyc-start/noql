[
  {
    "name": "Comparison:=",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$eq": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id =10"
  },
  {
    "name": "Comparison:=",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$eq": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id=10) as expr from `films`"
  },
  {
    "name": "Comparison:EQ",
    "output": {
      "limit": 100,
      "projection": {
        "expr": {
          "$eq": [
            "$id",
            {
              "$literal": 10
            }
          ]
        }
      },
      "collection": "films"
    },
    "query": "select eq(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:>",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$gt": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id >10"
  },
  {
    "name": "Comparison:>",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$gt": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id>10) as expr from `films`"
  },
  {
    "name": "Comparison:GT",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$gt": ["$id", {"$literal": 10}]}},
      "collection": "films"
    },
    "query": "select gt(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:<",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$lt": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id <10"
  },
  {
    "name": "Comparison:<",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$lt": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id<10) as expr from `films`"
  },
  {
    "name": "Comparison:LT",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$lt": ["$id", {"$literal": 10}]}},
      "collection": "films"
    },
    "query": "select lt(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:<=",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$lte": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id <=10"
  },
  {
    "name": "Comparison:<=",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$lte": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id<=10) as expr from `films`"
  },
  {
    "name": "Comparison:LTE",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$lte": ["$id", {"$literal": 10}]}},
      "collection": "films"
    },
    "query": "select lte(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:>=",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$gte": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id >=10"
  },
  {
    "name": "Comparison:>=",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$gte": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id>=10) as expr from `films`"
  },
  {
    "name": "Comparison:GTE",
    "output": {
      "limit": 100,
      "projection": {
        "expr": {
          "$gte": [
            "$id",
            {
              "$literal": 10
            }
          ]
        }
      },
      "collection": "films"
    },
    "query": "select gte(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:!=",
    "output": {
      "limit": 100,
      "query": {
        "id": {
          "$ne": 10
        }
      },
      "collection": "films"
    },
    "query": "select * from `films` where id !=10"
  },
  {
    "name": "Comparison:!=",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$ne": ["$id", 10]}},
      "collection": "films"
    },
    "query": "select (id!=10) as expr from `films`"
  },
  {
    "name": "Comparison:NE",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$ne": ["$id", {"$literal": 10}]}},
      "collection": "films"
    },
    "query": "select ne(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:CMP",
    "output": {
      "limit": 100,
      "projection": {"expr": {"$cmp": ["$id", {"$literal": 10}]}},
      "collection": "films"
    },
    "query": "select cmp(id,10) as expr from `films`"
  },
  {
    "name": "Comparison:AND",
    "output": {
      "limit": 100,
      "projection": {
        "id": "$id"
      },
      "query": {
        "$and": [
          {
            "id": {
              "$gt": 10
            }
          },
          {
            "id": {
              "$lt": 20
            }
          }
        ]
      },
      "collection": "films"
    },
    "query": "select id from `films` where id >10 and id <20"
  },
  {
    "name": "Comparison:OR",
    "output": {
      "limit": 100,
      "projection": {
        "id": "$id"
      },
      "query": {
        "$or": [
          {
            "id": {
              "$eq": 1
            }
          },
          {
            "id": {
              "$eq": 2
            }
          }
        ]
      },
      "collection": "films"
    },
    "query": "select id from `films` where id =1 or id =2"
  },
  {
    "name": "Comparison:Composite",
    "output": {
      "limit": 100,
      "projection": {
        "id": "$id"
      },
      "query": {
        "$or": [
          {
            "id": {
              "$eq": 1
            }
          },
          {
            "$and": [
              {
                "id": {
                  "$gt": 2
                }
              },
              {
                "id": {
                  "$lt": 10
                }
              }
            ]
          }
        ]
      },
      "collection": "films"
    },
    "query": "select id from `films` where id =1 or (id  > 2 and id <10)"
  },
  {
    "name": "Comparison:Composite",
    "query": "select * from `films` where id<90 and (id>10 or id=5)",
    "output": {
      "limit": 100,
      "collection": "films",
      "query": {
        "$and": [
          {
            "id": {
              "$lt": 90
            }
          },
          {
            "$or": [
              {
                "id": {
                  "$gt": 10
                }
              },
              {
                "id": {
                  "$eq": 5
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "name": "Comparison:is NOT null",
    "output": {
      "limit": 100,
      "projection": {
        "id": "$id"
      },
      "query": {
        "id": {
          "$ne": null
        }
      },
      "collection": "films"
    },
    "query": "select id from `films` where id IS NOT NULL"
  },
  {
    "name": "Comparison:LIKE",
    "output": {
      "limit": 100,
      "projection": {
        "FName": "$First Name"
      },
      "query": {
        "First Name": {
          "$options": "i",
          "$regex": "^M"
        }
      },
      "collection": "customers"
    },
    "query": "select `First Name` as FName from `customers` where `First Name` Like 'M%'"
  },
  {
    "name": "Comparison:LIKE",
    "output": {
      "limit": 100,
      "projection": {
        "FName": "$First Name"
      },
      "query": {
        "$and": [
          {
            "First Name": {
              "$options": "i",
              "$regex": "^M"
            }
          },
          {
            "id": {
              "$lt": 50
            }
          }
        ]
      },
      "collection": "customers"
    },
    "query": "select `First Name` as FName from `customers` where `First Name` Like 'M%' and id < 50"
  },
  {
    "name": "Comparison:LIKE",
    "output": {
      "limit": 100,
      "projection": {
        "FName": "$First Name"
      },
      "query": {
        "First Name": {
          "$options": "i",
          "$regex": "M$"
        }
      },
      "collection": "customers"
    },
    "query": "select `First Name` as FName from `customers` where `First Name` Like '%M'"
  },
  {
    "name": "Comparison:LIKE",
    "output": {
      "limit": 100,
      "projection": {
        "FName": "$First Name"
      },
      "query": {
        "First Name": {
          "$options": "i",
          "$regex": "^M%A$"
        }
      },
      "collection": "customers"
    },
    "query": "select `First Name` as FName from `customers` where `First Name` Like 'M%A'"
  },
  {
    "name": "Comparison:ILIKE",
    "output": {
      "limit": 100,
      "projection": {
        "FName": "$First Name"
      },
      "query": {
        "First Name": {
          "$options": "i",
          "$regex": "^M%A$"
        }
      },
      "collection": "customers"
    },
    "query": "select `First Name` as FName from `customers` where `First Name` ILike 'M%A'"
  },
  {
    "name": "Comparison:LIKE",
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%'",
    "output": {
      "limit": 100,
      "collection": "customers",
      "query": {
        "First Name": {
          "$regex": "bc",
          "$options": "i"
        }
      }
    }
  },
  {
    "name": "Comparison:LIKE",
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%' limit 10 offset 2",
    "output": {
      "limit": 10,
      "skip": 2,
      "collection": "customers",
      "query": {
        "First Name": {
          "$regex": "bc",
          "$options": "i"
        }
      }
    }
  },
  {
    "name": "Query:LIKE",
    "query": "SELECT * FROM customers WHERE `First Name` like '%bc%' limit 10 offset 2",
    "output": {
      "limit": 10,
      "skip": 2,
      "collection": "customers",
      "query": {
        "First Name": {
          "$regex": "bc",
          "$options": "i"
        }
      }
    }
  },
  {
    "name": "Comparison:Case",
    "query": "select id,(case when id=3 then '1' when id=2 then '1' else 0 end) as test from `customers`",
    "output": {
      "limit": 100,
      "collection": "customers",
      "projection": {
        "id": "$id",
        "test": {
          "$switch": {
            "branches": [
              {
                "case": {
                  "$eq": ["$id", 3]
                },
                "then": "1"
              },
              {
                "case": {
                  "$eq": ["$id", 2]
                },
                "then": "1"
              }
            ],
            "default": {
              "$literal": 0
            }
          }
        }
      }
    }
  },
  {
    "name": "Comparison:IN list",
    "query": "select * from `customers` where `Address.City` in ('Japan','Pakistan') limit 10",
    "output": {
      "limit": 10,
      "collection": "customers",
      "query": {
        "Address.City": {
          "$in": ["Japan", "Pakistan"]
        }
      }
    }
  },
  {
    "name": "Comparison:NOT IN list",
    "query": "select * from `customers` where `Address.City` not in ('Japan','Pakistan') limit 10",
    "output": {
      "limit": 10,
      "collection": "customers",
      "query": {
        "Address.City": {
          "$nin": ["Japan", "Pakistan"]
        }
      }
    }
  },
  {
    "name": "Comparison:Composite",
    "query": "select `Address.City` as City ,`First Name` as Name from `customers` where `id`>1 limit 10 offset 5",
    "output": {
      "collection": "customers",
      "limit": 10,
      "skip": 5,
      "projection": {
        "City": "$Address.City",
        "Name": "$First Name"
      },
      "query": {
        "id": {
          "$gt": 1
        }
      }
    }
  },

  {
    "name": "Comparison:NOT col IS NULL",
    "query": "select * from `customers` where NOT `Address.City` IS NULL ",
    "output": {
      "collection": "customers",
      "limit": 100,
      "query": {
        "Address.City": {
          "$ne": null
        }
      }
    }
  },
  {
    "name": "Comparison:IS NULL",
    "query": "select * from `customers` where `Address.City` IS NULL ",
    "output": {
      "collection": "customers",
      "limit": 100,
      "query": {
        "Address.City": {
          "$eq": null
        }
      }
    }
  },
  {
    "name": "Comparison:NOT OR",
    "query": "select * from films where NOT (Title = 'Test' or Title = 'test2')",
    "output": {
      "collection": "films",
      "limit": 100,
      "query": {
        "$nor": [
          {
            "$or": [
              {
                "Title": {
                  "$eq": "Test"
                }
              },
              {
                "Title": {
                  "$eq": "test2"
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "name": "Comparison:NOT Like",
    "query": "select * from films\nwhere Title not like 'Academy%'",
    "output": {
      "collection": "films",
      "limit": 100,
      "query": {
        "Title": {
          "$not": {
            "$regex": "^Academy",
            "$options": "i"
          }
        }
      }
    }
  },
  {
    "name": "Case:IN list ",
    "query": "select Title, case when Rating in ('PG','PG-13') then 'PG' else Rating end as Rating from films",
    "output": {
      "collection": "films",
      "limit": 100,
      "projection": {
        "Title": "$Title",
        "Rating": {
          "$switch": {
            "branches": [
              {
                "case": {
                  "$in": ["$Rating", ["PG", "PG-13"]]
                },
                "then": "PG"
              }
            ],
            "default": "$Rating"
          }
        }
      }
    }
  },
  {
    "name": "Case:IN list where",
    "query": "select * from films where Length = case when Rating in ('PG','PG-13') then 100 else Length end",
    "output": {
      "collection": "films",
      "limit": 100,
      "query": {
        "$expr": {
          "$eq": [
            "$Length",
            {
              "$switch": {
                "branches": [
                  {
                    "case": {
                      "$in": ["$Rating", ["PG", "PG-13"]]
                    },
                    "then": 100
                  }
                ],
                "default": "$Length"
              }
            }
          ]
        }
      }
    }
  }
]
